#ifndef UPLINK_BUILDER_H
#define UPLINK_BUILDER_H

#include <stdint.h>
#include "types.h"  // enthält Definition von record_t etc.

/// @file uplink_builder.h
/// @brief Erstellung von Uplink-Datenpaketen gemäß DFP-2
///
/// Diese Schnittstelle ermöglicht das Kodieren mehrerer `record_t`-Datensätze
/// in ein kompaktes Binärpaket, das via Funkmodul übertragen werden kann.

 /**
  * @brief Erzeugt ein Uplink-Datenpaket für die Funkübertragung.
  *
  * Jeder Datensatz (`record_t`) wird dabei auf 5 Bytes komprimiert (Zeitstempel mit CRC-4, Temperatur als Fixed-Point mit Flags).
  *
  * Paketstruktur gemäß DFP-2:
  * ```
  * [0]   = Header (z. B. 0xA2)
  * [1]   = Sequenznummer
  * [2–5] = Geräte-ID (4 Byte)
  * [6]   = Payload-Length (N x 5)
  * [7–…] = N x Datensatz
  * [end] = CRC-8 über alle vorherigen Bytes
  * ```
  *
  * @param records    Zeiger auf die zu sendenden Datensätze
  * @param count      Anzahl Datensätze (max. 10 empfohlen)
  * @param device_id  Zeiger auf 4-Byte Geräte-ID
  * @param seq_nr     Sequenznummer für dieses Paket
  * @param out_buf    Zeiger auf den Puffer, in den das Paket geschrieben wird
  * @return Länge des erzeugten Pakets in Bytes
  */
uint8_t uplink_build_packet(const record_t* records, uint8_t count,
                            const uint8_t* device_id, uint8_t seq_nr,
                            uint8_t* out_buf);

#endif // UPLINK_BUILDER_H
